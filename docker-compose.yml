version: '3.9'

services:
  # ==========================================
  # Main Application
  # ==========================================
  mathpati-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: mathpati:latest
    container_name: mathpati-app
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - mathpati-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.mathpati.service=frontend"
      - "com.mathpati.version=1.0.0"

  # ==========================================
  # Metrics Server
  # ==========================================
  metrics-server:
    build:
      context: ./server
      dockerfile: ../Dockerfile.metrics
    image: mathpati-metrics:latest
    container_name: mathpati-metrics
    restart: unless-stopped
    ports:
      - "9090:9090"
    environment:
      - NODE_ENV=production
      - PORT=9090
    networks:
      - mathpati-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    labels:
      - "com.mathpati.service=metrics"

  # ==========================================
  # Prometheus (Monitoring)
  # ==========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: mathpati-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - mathpati-network
    labels:
      - "com.mathpati.service=monitoring"

  # ==========================================
  # Grafana (Visualization)
  # ==========================================
  grafana:
    image: grafana/grafana:latest
    container_name: mathpati-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3001
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - mathpati-network
    depends_on:
      - prometheus
    labels:
      - "com.mathpati.service=visualization"

  # ==========================================
  # Nginx Reverse Proxy (Optional)
  # ==========================================
  nginx-proxy:
    image: nginx:alpine
    container_name: mathpati-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - mathpati-network
    depends_on:
      - mathpati-app
    labels:
      - "com.mathpati.service=proxy"
    profiles:
      - with-proxy

# ==========================================
# Networks
# ==========================================
networks:
  mathpati-network:
    driver: bridge
    name: mathpati-network

# ==========================================
# Volumes
# ==========================================
volumes:
  prometheus-data:
    driver: local
    name: mathpati-prometheus-data
  grafana-data:
    driver: local
    name: mathpati-grafana-data
